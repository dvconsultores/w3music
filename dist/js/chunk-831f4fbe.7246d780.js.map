{"version":3,"sources":["webpack:///../../../src/components/VApp/VApp.ts","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts"],"names":["mixins","Themeable","extend","name","props","dark","type","Boolean","default","undefined","id","String","light","computed","isDark","this","$vuetify","theme","beforeCreate","$root","Error","render","h","wrapper","staticClass","$slots","class","rtl","themeClasses","attrs","domProps","VGrid","Vue","functional","tag","data","children","trim","classes","Object","keys","filter","key","value","startsWith","length","join","Grid","fluid","mergeData","Array","concat"],"mappings":"gOAUeA,sBACbC,QACAC,OAAO,CACPC,KAAM,QAENC,MAAO,CACLC,KAAM,CACJC,KAAMC,QACNC,aAASC,GAEXC,GAAI,CACFJ,KAAMK,OACNH,QAAS,OAEXI,MAAO,CACLN,KAAMC,QACNC,aAASC,IAIbI,SAAU,CACRC,OADQ,WAEN,OAAOC,KAAKC,SAASC,MAAMZ,OAI/Ba,aAxBO,WAyBL,IAAKH,KAAKC,UAAaD,KAAKC,WAAaD,KAAKI,MAC5C,MAAM,IAAIC,MAAM,gIAIpBC,OA9BO,SA8BCC,GACN,IAAMC,EAAUD,EAAE,MAAO,CAAEE,YAAa,uBAAyBT,KAAKU,OAAOjB,SAE7E,OAAOc,EAAE,MAAO,CACdE,YAAa,gBACbE,MAAO,gBACL,wBAAyBX,KAAKC,SAASW,IACvC,yBAA0BZ,KAAKC,SAASW,KACrCZ,KAAKa,cAEVC,MAAO,CAAE,YAAY,GACrBC,SAAU,CAAEpB,GAAIK,KAAKL,KACpB,CAACa,Q,4ICnDM,SAAUQ,EAAO5B,GAE7B,OAAO6B,OAAI9B,OAAO,CAChBC,KAAM,KAAF,OAAOA,GAEX8B,YAAY,EAEZ7B,MAAO,CACLM,GAAIC,OACJuB,IAAK,CACH5B,KAAMK,OACNH,QAAS,QAIba,OAbgB,SAaRC,EAbQ,GAaoB,IAAvBlB,EAAuB,EAAvBA,MAAO+B,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,SACxBD,EAAKX,YAAe,UAAGrB,EAAH,YAAWgC,EAAKX,aAAe,IAAMa,OAEzD,IAAQR,EAAUM,EAAVN,MACR,GAAIA,EAAO,CAETM,EAAKN,MAAQ,GACb,IAAMS,EAAUC,OAAOC,KAAKX,GAAOY,QAAO,SAAAC,GAGxC,GAAY,SAARA,EAAgB,OAAO,EAE3B,IAAMC,EAAQd,EAAMa,GAIpB,OAAIA,EAAIE,WAAW,UACjBT,EAAKN,MAAOa,GAAOC,GACZ,GAGFA,GAA0B,kBAAVA,KAGrBL,EAAQO,SAAQV,EAAKX,aAAL,WAAwBc,EAAQQ,KAAK,OAQ3D,OALI1C,EAAMM,KACRyB,EAAKL,SAAWK,EAAKL,UAAY,GACjCK,EAAKL,SAASpB,GAAKN,EAAMM,IAGpBY,EAAElB,EAAM8B,IAAKC,EAAMC,M,gBC1CjBW,SAAK,aAAa7C,OAAO,CACtCC,KAAM,cACN8B,YAAY,EACZ7B,MAAO,CACLM,GAAIC,OACJuB,IAAK,CACH5B,KAAMK,OACNH,QAAS,OAEXwC,MAAO,CACL1C,KAAMC,QACNC,SAAS,IAGba,OAdsC,SAc9BC,EAd8B,GAcF,IAC9BgB,EADOlC,EAAuB,EAAvBA,MAAO+B,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,SAEhBP,EAAUM,EAAVN,MA2BR,OA1BIA,IAEFM,EAAKN,MAAQ,GACbS,EAAUC,OAAOC,KAAKX,GAAOY,QAAO,SAAAC,GAGlC,GAAY,SAARA,EAAgB,OAAO,EAE3B,IAAMC,EAAQd,EAAMa,GAIpB,OAAIA,EAAIE,WAAW,UACjBT,EAAKN,MAAOa,GAAOC,GACZ,GAGFA,GAA0B,kBAAVA,MAIvBvC,EAAMM,KACRyB,EAAKL,SAAWK,EAAKL,UAAY,GACjCK,EAAKL,SAASpB,GAAKN,EAAMM,IAGpBY,EACLlB,EAAM8B,IACNe,eAAUd,EAAM,CACdX,YAAa,YACbE,MAAOwB,MAAW,CAChB,mBAAoB9C,EAAM4C,QACzBG,OAAOb,GAAW,MAEvBF,O","file":"js/chunk-831f4fbe.7246d780.js","sourcesContent":["// Styles\nimport './VApp.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  Themeable\n).extend({\n  name: 'v-app',\n\n  props: {\n    dark: {\n      type: Boolean,\n      default: undefined,\n    },\n    id: {\n      type: String,\n      default: 'app',\n    },\n    light: {\n      type: Boolean,\n      default: undefined,\n    },\n  },\n\n  computed: {\n    isDark (): boolean {\n      return this.$vuetify.theme.dark\n    },\n  },\n\n  beforeCreate () {\n    if (!this.$vuetify || (this.$vuetify === this.$root as any)) {\n      throw new Error('Vuetify is not properly initialized, see https://vuetifyjs.com/getting-started/quick-start#bootstrapping-the-vuetify-object')\n    }\n  },\n\n  render (h) {\n    const wrapper = h('div', { staticClass: 'v-application--wrap' }, this.$slots.default)\n\n    return h('div', {\n      staticClass: 'v-application',\n      class: {\n        'v-application--is-rtl': this.$vuetify.rtl,\n        'v-application--is-ltr': !this.$vuetify.rtl,\n        ...this.themeClasses,\n      },\n      attrs: { 'data-app': true },\n      domProps: { id: this.id },\n    }, [wrapper])\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":""}