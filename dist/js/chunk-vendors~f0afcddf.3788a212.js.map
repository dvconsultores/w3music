{"version":3,"sources":["webpack:///./node_modules/apollo-cache/lib/bundle.esm.js","webpack:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js","webpack:///./node_modules/apollo-link/lib/bundle.esm.js","webpack:///./node_modules/apollo-client/bundle.esm.js","webpack:///./node_modules/apollo-link-http-common/lib/bundle.esm.js","webpack:///./node_modules/apollo-link-http/lib/bundle.esm.js","webpack:///./node_modules/apollo-link-error/lib/bundle.esm.js","webpack:///./node_modules/apollo-boost/lib/bundle.esm.js","webpack:///./node_modules/apollo-utilities/lib/bundle.esm.js"],"names":["queryFromPojo","obj","op","kind","operation","name","value","selectionSet","selectionSetFromObj","out","definitions","fragmentFromPojo","typename","frag","typeCondition","Array","isArray","selections","Object","keys","forEach","key","nestedSelSet","field","undefined","push","Cache","justTypenameQuery","variableDefinitions","directives","alias","arguments","ApolloCache","prototype","transformDocument","document","transformForLink","readQuery","options","optimistic","this","read","query","variables","readFragment","fragment","fragmentName","rootId","id","writeQuery","write","dataId","result","data","writeFragment","writeData","_a","typenameResult","e","__typename","dataToWrite","assign","haveWarned","shouldWarn","answer","HeuristicFragmentMatcher","ensureReady","Promise","resolve","canBypassInit","match","idValue","context","store","get","isRootQuery","hasOwn","IntrospectionFragmentMatcher","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","bind","implementingTypes","indexOf","introspectionResultData","typeMap","__schema","types","type","possibleTypes","map","implementingType","hasOwnProperty","DepTrackingCache","_this","create","depend","disposable","makeCacheKey","toObject","set","oldValue","dirty","delete","call","clear","replace","newData","defaultNormalizedCacheFactory","seed","StoreReader","_b","_c","cacheKeyRoot","_d","freezeResults","_e","executeStoreQuery","executeSelectionSet","executeSubSelectedArray","rootValue","contextValue","variableValues","fragmentMatcher","lookup","JSON","stringify","execContext","array","readQueryFromStore","diffQueryAgainstStore","returnPartialData","previousResult","fragmentMatcherFunction","config","queryDefinition","dataIdFromObject","cacheRedirects","execResult","generated","hasMissingFields","missing","length","info","tolerable","complete","defaultFragmentMatcher","mainDefinition","fragments","fragmentMap","finalResult","objectsToMerge","object","handleMissing","apply","selection","fieldResult","executeField","fragmentExecResult","fieldName","args","resultKey","readStoreResult","readStoreResolver","combineExecResults","assertSelectionSetForIdValue","execResults","_i","pop","childResult","item","storeKeyName","fieldValue","resolver","getCacheKey","storeObj","json","ObjectCache","_super","WriteError","Error","enhanceErrorWithDocument","error","enhancedError","message","stack","StoreWriter","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","resultFieldKey","writeFieldToStore","isDefered","isClient","some","directive","matches","fakeContext","storeValue","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","index","itemDataId","generatedKey","realKey","cache","real","madeChanges","realValue","newRealValue","defaultConfig","defaultDataIdFromObject","addTypename","resultCaching","_id","hasOwn$1","OptimisticCacheLayer","optimisticId","parent","transaction","InMemoryCache","watches","Set","typenameDocumentCache","Map","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","c","restore","extract","broadcastWatches","diff","watch","add","evict","reset","removeOptimistic","idToRemove","toReapply","removedCount","layer","layer_1","performTransaction","recordOptimisticTransaction","callback","validateOperation","OPERATION_FIELDS","LinkError","link","isTerminating","request","fromError","errorValue","observer","transformOperation","transformedOperation","extensions","operationName","createOperation","starting","setContext","next","getContext","defineProperty","enumerable","getKey","passthrough","forward","of","toLink","handler","empty","from","links","reduce","x","y","concat","split","test","left","right","leftLink","rightLink","first","second","firstLink","nextLink","ApolloLink","execute","NetworkStatus","isNetworkRequestInFlight","networkStatus","Observable","isNonEmptyArray","isApolloError","err","FetchType","generateErrorMessage","graphQLErrors","graphQLError","errorMessage","networkError","ApolloError","extraInfo","__proto__","hasError","policy","ObservableQuery","queryManager","shouldSubscribe","onSubscribe","observers","subscriptions","isTornDown","queryId","generateQueryId","opDef","queryName","reject","size","removeQuery","setTimeout","subscription","unsubscribe","subscribe","currentResult","getCurrentResult","lastResult","lastError","loading","getCurrentQueryResult","partial","queryStoreValue","queryStore","fetchPolicy","isNetworkFetchPolicy","errorPolicy","errors","ready","updateLastResult","stale","isDifferentFromLastResult","newResult","snapshot","lastResultSnapshot","getLastResult","getLastError","resetLastResults","resetQueryStoreErrors","refetch","fetchQuery","fetchMore","fetchMoreOptions","updateQuery","combinedOptions","qid","normal","then","fetchMoreResult","stopQuery","subscribeToMore","startGraphQLSubscription","subscriptionData","previous","onError","setOptions","opts","oldFetchPolicy","pollInterval","startPolling","stopPolling","setVariables","fetchResults","tryFetch","mapFn","getQueryWithPreviousResult","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","assertNotCacheFirstOrOnly","startPollingQuery","assumeImmutableResults","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","setUpQuery","tearDownQuery","addObservableQuery","iterateObserversSafely","observeQuery","previousResult_1","query_1","fetchPolicy_1","transform","hasClientExports","getLocalState","addExportedVariables","previousVariables","serverQuery","catch","sub","removeObservableQuery","method","argument","observersWithMethod","obs","obsQuery","MutationStore","getStore","mutationId","initMutation","mutation","markMutationError","markMutationResult","QueryStore","initQuery","previousQuery","isSetVariables","storePreviousVariables","isPoll","poll","isRefetch","metadata","fetchMoreForQueryId","markQueryResult","markQueryError","markQueryResultClient","observableQueryIds","capitalizeFirstLetter","str","charAt","toUpperCase","slice","LocalState","client","resolvers","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","prepareContext","newContext","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","Directive","enter","node","arg","definitionOperation","defaultOperationType","resolveSelectionSet","resultsToMerge","resolveField","fragmentResult","all","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","resolveSubSelectedArray","multiplex","inner","asyncMap","observable","activeNextCount","completed","QueryManager","queryDeduplication","onBroadcast","ssrMode","clientAwareness","localState","mutationStore","idCounter","queries","fetchQueryRejectFns","transformCache","WeakMap","inFlightLinkObservables","pollingInfoByQueryId","getCache","stop","_info","stopQueryNoBroadcast","mutate","optimisticResponse","updateQueriesByName","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","update","generateUpdateQueriesInfo","self","_f","label","setQuery","getVariables","sent","ret","observableQuery","updater","markMutationInit","storeResult","getObservableFromLink","markMutationComplete","refetchQueryPromises","refetchQuery","queryOptions","fetchType","isNetworkOnly","needToFetch","shouldFetch","requestId","cancel","networkResult","updateQueryWatch","lastRequestId","invalidated","invalidate","fetchRequest","getQuery","hasForcedResolvers","queryListenerForObserver","invoke","networkStatusChanged","shouldNotifyIfLoading","notifyOnNetworkStatusChange","hasGraphQLErrors","isMissing","errorStatusChanged","diffResult","resultFromStore","has","transformed","forLink","cacheEntry_1","defaultVars","doc","watchQuery","transformedOptions","watchedQuery","String","stopQueryInStore","stopQueryInStoreNoBroadcast","addQueryListener","listener","listeners","clearStore","resetIds","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","startQuery","makeObservable","markSubscriptionResult","observablePromise_1","queryIdOrObservable","foundObserveableQuery","deduplication","inFlightLinkObservables_1","forceFetch","byVariables_1","varJson_1","cleanup","cleanupSub_1","errorsFromStore","fqrfId","result_1","prev","newInfo","checkInFlight","interval","maybeFetch_1","poll_1","clearTimeout","timeout","DataStore","initialCache","ignoreErrors","writeWithErrors","optimistic_1","orig","cacheWrites_1","updateQueries_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","ApolloClient","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","typeDefs","clientAwarenessName","clientAwarenessVersion","version","disableNetworkFetches","defaultConnectToDevTools","window","__APOLLO_CLIENT__","devToolsHookCb","action","state","mutations","dataWithOptimisticResults","__actionHookForDevTools","cb","__requestRaw","payload","initQueryManager","fn","onResetStore","filter","onClearStore","serializedState","setLocalStateFragmentMatcher","defaultHttpOptions","includeQuery","includeExtensions","defaultHeaders","accept","fallbackHttpConfig","http","headers","throwServerError","response","statusCode","status","parseAndCheckHttpResponse","operations","text","bodyText","parse","parseError","checkFetcher","fetcher","fetch","createSignalIfSupported","AbortController","controller","signal","selectHttpOptionsAndBody","fallbackConfig","configs","credentials","body","serializeFetchParameter","p","serialized","selectURI","fallbackURI","contextURI","uri","createHttpLink","linkOptions","useGETForQueries","requestOptions","linkConfig","fetchOptions","chosenURI","clientAwarenessHeaders","name_1","contextHeaders","contextConfig","_controller","definitionIsMutation","d","rewriteURIForGET","newURI","abort","queryParams","addQueryParam","encodeURIComponent","serializedVariables","serializedExtensions","preFragment","fragmentStart","substr","queryParamsPrefix","join","HttpLink","errorHandler","retriedSub","retriedResult","ErrorLink","PRESET_CONFIG_KEYS","DefaultClient","clientState","errorCallback","errorLink","locations","path","requestHandler","handle","oper","httpLink","activeResolvers","activeTypeDefs","activeFragmentMatcher","defaults","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","Number","nestedArgObj_1","fields","variableValue","values","listValue","nestedArgArrayObj","storeKeyNameFromField","directivesObj","getStoreKeyName","KNOWN_DIRECTIVES","filterKeys","sort","queryArgs_1","filteredArgs_1","completeFieldName","stringifiedArgs","argumentsObjectFromField","argObj_1","resultKeyNameFromField","isField","isInlineFragment","isIdValue","idObject","toIdValue","idConfig","isJsonValue","jsonObject","getDirectiveInfoFromField","directiveObj_1","shouldInclude","getInclusionDirectives","every","ifArgument","evaledValue","getDirectiveNames","names","hasDirectives","isInclusionDirective","directiveArguments","ifValue","getFragmentQueryDocument","actualFragmentName","definition","target","sources","source","checkDocument","getOperationDefinition","getOperationName","getFragmentDefinitions","getQueryDefinition","queryDef","getFragmentDefinition","fragmentDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","getDefaultValues","defaultValues","defaultValue","variable","defaultValueObj","filterInPlace","elem","i","TYPENAME_FIELD","isEmpty","nullIfDocIsEmpty","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","_key","Field","shouldRemoveField","remove","getAllFragmentSpreadsFromSelectionSet","FragmentSpread","v","removeArgumentsFromDocument","fs","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","skip","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","getArgumentMatcher","aConfig","argMatcher","OperationDefinition","varDef","argConfig","argMatchCount_1","Argument","def","FragmentDefinition","allFragments","buildQueryFromSelectionSet","removeClientSetsFromDocument","isTypenameOnly","canUseWeakMap","navigator","product","toString","cloneDeep","cloneDeepHelper","val","seen","copy_1","child","copy_2","getPrototypeOf","getEnv","process","isEnv","env","isProduction","isDevelopment","isTest","tryFunctionOrLogError","f","console","graphQLResultHasError","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","maybeDeepFreeze","symbolIsPolyfilled","Symbol","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue"],"mappings":"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","file":"js/chunk-vendors~f0afcddf.3788a212.js","sourcesContent":["import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __assign, __extends } from 'tslib';\nimport { ApolloCache } from 'apollo-cache';\nimport { isTest, getQueryDefinition, assign, getDefaultValues, isEqual, getMainDefinition, getFragmentDefinitions, createFragmentMap, shouldInclude, isField, resultKeyNameFromField, isInlineFragment, mergeDeepArray, argumentsObjectFromField, getDirectiveInfoFromField, maybeDeepFreeze, isIdValue, getStoreKeyName, toIdValue, isJsonValue, canUseWeakMap, getOperationDefinition, isProduction, storeKeyNameFromField, addTypenameToDocument } from 'apollo-utilities';\nimport { wrap, KeyTrie } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nvar haveWarned = false;\nfunction shouldWarn() {\n    var answer = !haveWarned;\n    if (!isTest()) {\n        haveWarned = true;\n    }\n    return answer;\n}\nvar HeuristicFragmentMatcher = (function () {\n    function HeuristicFragmentMatcher() {\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true;\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        if (!__typename) {\n            if (shouldWarn()) {\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                process.env.NODE_ENV === \"production\" || invariant.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n            }\n            return 'heuristic';\n        }\n        if (__typename === typeCondition) {\n            return true;\n        }\n        if (shouldWarn()) {\n            process.env.NODE_ENV === \"production\" || invariant.error('You are using the simple (heuristic) fragment matcher, but your ' +\n                'queries contain union or interface types. Apollo Client will not be ' +\n                'able to accurately map fragments. To make this error go away, use ' +\n                'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n                'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher');\n        }\n        return 'heuristic';\n    };\n    return HeuristicFragmentMatcher;\n}());\nvar IntrospectionFragmentMatcher = (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        process.env.NODE_ENV === \"production\" ? invariant(this.isReady, 1) : invariant(this.isReady, 'FragmentMatcher.match() was called before FragmentMatcher.init()');\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        process.env.NODE_ENV === \"production\" ? invariant(__typename, 2) : invariant(__typename, \"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        if (__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (__typename &&\n            implementingTypes &&\n            implementingTypes.indexOf(__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar DepTrackingCache = (function () {\n    function DepTrackingCache(data) {\n        var _this = this;\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n        this.depend = wrap(function (dataId) { return _this.data[dataId]; }, {\n            disposable: true,\n            makeCacheKey: function (dataId) {\n                return dataId;\n            },\n        });\n    }\n    DepTrackingCache.prototype.toObject = function () {\n        return this.data;\n    };\n    DepTrackingCache.prototype.get = function (dataId) {\n        this.depend(dataId);\n        return this.data[dataId];\n    };\n    DepTrackingCache.prototype.set = function (dataId, value) {\n        var oldValue = this.data[dataId];\n        if (value !== oldValue) {\n            this.data[dataId] = value;\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.delete = function (dataId) {\n        if (hasOwn.call(this.data, dataId)) {\n            delete this.data[dataId];\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.clear = function () {\n        this.replace(null);\n    };\n    DepTrackingCache.prototype.replace = function (newData) {\n        var _this = this;\n        if (newData) {\n            Object.keys(newData).forEach(function (dataId) {\n                _this.set(dataId, newData[dataId]);\n            });\n            Object.keys(this.data).forEach(function (dataId) {\n                if (!hasOwn.call(newData, dataId)) {\n                    _this.delete(dataId);\n                }\n            });\n        }\n        else {\n            Object.keys(this.data).forEach(function (dataId) {\n                _this.delete(dataId);\n            });\n        }\n    };\n    return DepTrackingCache;\n}());\nfunction defaultNormalizedCacheFactory(seed) {\n    return new DepTrackingCache(seed);\n}\n\nvar StoreReader = (function () {\n    function StoreReader(_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.cacheKeyRoot, cacheKeyRoot = _c === void 0 ? new KeyTrie(canUseWeakMap) : _c, _d = _b.freezeResults, freezeResults = _d === void 0 ? false : _d;\n        var _e = this, executeStoreQuery = _e.executeStoreQuery, executeSelectionSet = _e.executeSelectionSet, executeSubSelectedArray = _e.executeSubSelectedArray;\n        this.freezeResults = freezeResults;\n        this.executeStoreQuery = wrap(function (options) {\n            return executeStoreQuery.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, fragmentMatcher = _a.fragmentMatcher;\n                if (contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(contextValue.store, query, fragmentMatcher, JSON.stringify(variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSelectionSet = wrap(function (options) {\n            return executeSelectionSet.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, selectionSet, execContext.fragmentMatcher, JSON.stringify(execContext.variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            return executeSubSelectedArray.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, field, array, JSON.stringify(execContext.variableValues));\n                }\n            }\n        });\n    }\n    StoreReader.prototype.readQueryFromStore = function (options) {\n        return this.diffQueryAgainstStore(__assign(__assign({}, options), { returnPartialData: false })).result;\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n        var queryDefinition = getQueryDefinition(query);\n        variables = assign({}, getDefaultValues(queryDefinition), variables);\n        var context = {\n            store: store,\n            dataIdFromObject: config && config.dataIdFromObject,\n            cacheRedirects: (config && config.cacheRedirects) || {},\n        };\n        var execResult = this.executeStoreQuery({\n            query: query,\n            rootValue: {\n                type: 'id',\n                id: rootId,\n                generated: true,\n                typename: 'Query',\n            },\n            contextValue: context,\n            variableValues: variables,\n            fragmentMatcher: fragmentMatcherFunction,\n        });\n        var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n        if (hasMissingFields && !returnPartialData) {\n            execResult.missing.forEach(function (info) {\n                if (info.tolerable)\n                    return;\n                throw process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError(\"Can't find field \" + info.fieldName + \" on object \" + JSON.stringify(info.object, null, 2) + \".\");\n            });\n        }\n        if (previousResult) {\n            if (isEqual(previousResult, execResult.result)) {\n                execResult.result = previousResult;\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !hasMissingFields,\n        };\n    };\n    StoreReader.prototype.executeStoreQuery = function (_a) {\n        var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, _b = _a.fragmentMatcher, fragmentMatcher = _b === void 0 ? defaultFragmentMatcher : _b;\n        var mainDefinition = getMainDefinition(query);\n        var fragments = getFragmentDefinitions(query);\n        var fragmentMap = createFragmentMap(fragments);\n        var execContext = {\n            query: query,\n            fragmentMap: fragmentMap,\n            contextValue: contextValue,\n            variableValues: variableValues,\n            fragmentMatcher: fragmentMatcher,\n        };\n        return this.executeSelectionSet({\n            selectionSet: mainDefinition.selectionSet,\n            rootValue: rootValue,\n            execContext: execContext,\n        });\n    };\n    StoreReader.prototype.executeSelectionSet = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n        var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n        var finalResult = { result: null };\n        var objectsToMerge = [];\n        var object = contextValue.store.get(rootValue.id);\n        var typename = (object && object.__typename) ||\n            (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n            void 0;\n        function handleMissing(result) {\n            var _a;\n            if (result.missing) {\n                finalResult.missing = finalResult.missing || [];\n                (_a = finalResult.missing).push.apply(_a, result.missing);\n            }\n            return result.result;\n        }\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var fieldResult = handleMissing(_this.executeField(object, typename, selection, execContext));\n                if (typeof fieldResult !== 'undefined') {\n                    objectsToMerge.push((_a = {},\n                        _a[resultKeyNameFromField(selection)] = fieldResult,\n                        _a));\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = fragmentMap[selection.name.value];\n                    if (!fragment) {\n                        throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"No fragment named \" + selection.name.value);\n                    }\n                }\n                var typeCondition = fragment.typeCondition && fragment.typeCondition.name.value;\n                var match = !typeCondition ||\n                    execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n                if (match) {\n                    var fragmentExecResult = _this.executeSelectionSet({\n                        selectionSet: fragment.selectionSet,\n                        rootValue: rootValue,\n                        execContext: execContext,\n                    });\n                    if (match === 'heuristic' && fragmentExecResult.missing) {\n                        fragmentExecResult = __assign(__assign({}, fragmentExecResult), { missing: fragmentExecResult.missing.map(function (info) {\n                                return __assign(__assign({}, info), { tolerable: true });\n                            }) });\n                    }\n                    objectsToMerge.push(handleMissing(fragmentExecResult));\n                }\n            }\n        });\n        finalResult.result = mergeDeepArray(objectsToMerge);\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(finalResult.result);\n        }\n        return finalResult;\n    };\n    StoreReader.prototype.executeField = function (object, typename, field, execContext) {\n        var variables = execContext.variableValues, contextValue = execContext.contextValue;\n        var fieldName = field.name.value;\n        var args = argumentsObjectFromField(field, variables);\n        var info = {\n            resultKey: resultKeyNameFromField(field),\n            directives: getDirectiveInfoFromField(field, variables),\n        };\n        var readStoreResult = readStoreResolver(object, typename, fieldName, args, contextValue, info);\n        if (Array.isArray(readStoreResult.result)) {\n            return this.combineExecResults(readStoreResult, this.executeSubSelectedArray({\n                field: field,\n                array: readStoreResult.result,\n                execContext: execContext,\n            }));\n        }\n        if (!field.selectionSet) {\n            assertSelectionSetForIdValue(field, readStoreResult.result);\n            if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n                maybeDeepFreeze(readStoreResult);\n            }\n            return readStoreResult;\n        }\n        if (readStoreResult.result == null) {\n            return readStoreResult;\n        }\n        return this.combineExecResults(readStoreResult, this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            rootValue: readStoreResult.result,\n            execContext: execContext,\n        }));\n    };\n    StoreReader.prototype.combineExecResults = function () {\n        var execResults = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            execResults[_i] = arguments[_i];\n        }\n        var missing;\n        execResults.forEach(function (execResult) {\n            if (execResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, execResult.missing);\n            }\n        });\n        return {\n            result: execResults.pop().result,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.executeSubSelectedArray = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, execContext = _a.execContext;\n        var missing;\n        function handleMissing(childResult) {\n            if (childResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, childResult.missing);\n            }\n            return childResult.result;\n        }\n        array = array.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    execContext: execContext,\n                }));\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    rootValue: item,\n                    execContext: execContext,\n                }));\n            }\n            assertSelectionSetForIdValue(field, item);\n            return item;\n        });\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(array);\n        }\n        return { result: array, missing: missing };\n    };\n    return StoreReader;\n}());\nfunction assertSelectionSetForIdValue(field, value) {\n    if (!field.selectionSet && isIdValue(value)) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError(\"Missing selection set for object of type \" + value.typename + \" returned for query field \" + field.name.value);\n    }\n}\nfunction defaultFragmentMatcher() {\n    return true;\n}\nfunction assertIdValue(idValue) {\n    process.env.NODE_ENV === \"production\" ? invariant(isIdValue(idValue), 11) : invariant(isIdValue(idValue), \"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n}\nfunction readStoreResolver(object, typename, fieldName, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (object) {\n        fieldValue = object[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            typeof typename === 'string') {\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(object, args, {\n                        getCacheKey: function (storeObj) {\n                            var id = context.dataIdFromObject(storeObj);\n                            return id && toIdValue({\n                                id: id,\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        return {\n            result: fieldValue,\n            missing: [{\n                    object: object,\n                    fieldName: storeKeyName,\n                    tolerable: false,\n                }],\n        };\n    }\n    if (isJsonValue(fieldValue)) {\n        fieldValue = fieldValue.json;\n    }\n    return {\n        result: fieldValue,\n    };\n}\n\nvar ObjectCache = (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = void 0;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\nfunction defaultNormalizedCacheFactory$1(seed) {\n    return new ObjectCache(seed);\n}\n\nvar WriteError = (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\nfunction enhanceErrorWithDocument(error, document) {\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + JSON.stringify(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\nvar StoreWriter = (function () {\n    function StoreWriter() {\n    }\n    StoreWriter.prototype.writeQueryToStore = function (_a) {\n        var query = _a.query, result = _a.result, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        return this.writeResultToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            document: query,\n            store: store,\n            variables: variables,\n            dataIdFromObject: dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n    };\n    StoreWriter.prototype.writeResultToStore = function (_a) {\n        var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        var operationDefinition = getOperationDefinition(document);\n        try {\n            return this.writeSelectionSetToStore({\n                result: result,\n                dataId: dataId,\n                selectionSet: operationDefinition.selectionSet,\n                context: {\n                    store: store,\n                    processedData: {},\n                    variables: assign({}, getDefaultValues(operationDefinition), variables),\n                    dataIdFromObject: dataIdFromObject,\n                    fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n                    fragmentMatcherFunction: fragmentMatcherFunction,\n                },\n            });\n        }\n        catch (e) {\n            throw enhanceErrorWithDocument(e, document);\n        }\n    };\n    StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n        var _this = this;\n        var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n        var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var resultFieldKey = resultKeyNameFromField(selection);\n                var value = result[resultFieldKey];\n                if (typeof value !== 'undefined') {\n                    _this.writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    var isDefered = false;\n                    var isClient = false;\n                    if (selection.directives && selection.directives.length) {\n                        isDefered = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                        isClient = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'client'; });\n                    }\n                    if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n                        process.env.NODE_ENV === \"production\" || invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                    }\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = (fragmentMap || {})[selection.name.value];\n                    process.env.NODE_ENV === \"production\" ? invariant(fragment, 3) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n                }\n                var matches = true;\n                if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                    var id = dataId || 'self';\n                    var idValue = toIdValue({ id: id, typename: undefined });\n                    var fakeContext = {\n                        store: new ObjectCache((_a = {}, _a[id] = result, _a)),\n                        cacheRedirects: {},\n                    };\n                    var match = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                    if (!isProduction() && match === 'heuristic') {\n                        process.env.NODE_ENV === \"production\" || invariant.error('WARNING: heuristic fragment matching going on!');\n                    }\n                    matches = !!match;\n                }\n                if (matches) {\n                    _this.writeSelectionSetToStore({\n                        result: result,\n                        selectionSet: fragment.selectionSet,\n                        dataId: dataId,\n                        context: context,\n                    });\n                }\n            }\n        });\n        return store;\n    };\n    StoreWriter.prototype.writeFieldToStore = function (_a) {\n        var _b;\n        var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n        var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n        var storeValue;\n        var storeObject;\n        var storeFieldName = storeKeyNameFromField(field, variables);\n        if (!field.selectionSet || value === null) {\n            storeValue =\n                value != null && typeof value === 'object'\n                    ?\n                        { type: 'json', json: value }\n                    :\n                        value;\n        }\n        else if (Array.isArray(value)) {\n            var generatedId = dataId + \".\" + storeFieldName;\n            storeValue = this.processArrayValue(value, generatedId, field.selectionSet, context);\n        }\n        else {\n            var valueDataId = dataId + \".\" + storeFieldName;\n            var generated = true;\n            if (!isGeneratedId(valueDataId)) {\n                valueDataId = '$' + valueDataId;\n            }\n            if (dataIdFromObject) {\n                var semanticId = dataIdFromObject(value);\n                process.env.NODE_ENV === \"production\" ? invariant(!semanticId || !isGeneratedId(semanticId), 4) : invariant(!semanticId || !isGeneratedId(semanticId), 'IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n                if (semanticId ||\n                    (typeof semanticId === 'number' && semanticId === 0)) {\n                    valueDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(valueDataId, field, context.processedData)) {\n                this.writeSelectionSetToStore({\n                    dataId: valueDataId,\n                    result: value,\n                    selectionSet: field.selectionSet,\n                    context: context,\n                });\n            }\n            var typename = value.__typename;\n            storeValue = toIdValue({ id: valueDataId, typename: typename }, generated);\n            storeObject = store.get(dataId);\n            var escapedId = storeObject && storeObject[storeFieldName];\n            if (escapedId !== storeValue && isIdValue(escapedId)) {\n                var hadTypename = escapedId.typename !== undefined;\n                var hasTypename = typename !== undefined;\n                var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n                process.env.NODE_ENV === \"production\" ? invariant(!generated || escapedId.generated || typenameChanged, 5) : invariant(!generated || escapedId.generated || typenameChanged, \"Store error: the application attempted to write an object with no provided id but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                process.env.NODE_ENV === \"production\" ? invariant(!hadTypename || hasTypename, 6) : invariant(!hadTypename || hasTypename, \"Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                if (escapedId.generated) {\n                    if (typenameChanged) {\n                        if (!generated) {\n                            store.delete(escapedId.id);\n                        }\n                    }\n                    else {\n                        mergeWithGenerated(escapedId.id, storeValue.id, store);\n                    }\n                }\n            }\n        }\n        storeObject = store.get(dataId);\n        if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n            store.set(dataId, __assign(__assign({}, storeObject), (_b = {}, _b[storeFieldName] = storeValue, _b)));\n        }\n    };\n    StoreWriter.prototype.processArrayValue = function (value, generatedId, selectionSet, context) {\n        var _this = this;\n        return value.map(function (item, index) {\n            if (item === null) {\n                return null;\n            }\n            var itemDataId = generatedId + \".\" + index;\n            if (Array.isArray(item)) {\n                return _this.processArrayValue(item, itemDataId, selectionSet, context);\n            }\n            var generated = true;\n            if (context.dataIdFromObject) {\n                var semanticId = context.dataIdFromObject(item);\n                if (semanticId) {\n                    itemDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n                _this.writeSelectionSetToStore({\n                    dataId: itemDataId,\n                    result: item,\n                    selectionSet: selectionSet,\n                    context: context,\n                });\n            }\n            return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n        });\n    };\n    return StoreWriter;\n}());\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    if (generatedKey === realKey) {\n        return false;\n    }\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    var madeChanges = false;\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (isIdValue(value) &&\n            isGeneratedId(value.id) &&\n            isIdValue(realValue) &&\n            !isEqual(value, realValue) &&\n            mergeWithGenerated(value.id, realValue.id, cache)) {\n            madeChanges = true;\n        }\n    });\n    cache.delete(generatedKey);\n    var newRealValue = __assign(__assign({}, generated), real);\n    if (isEqual(newRealValue, real)) {\n        return madeChanges;\n    }\n    cache.set(realKey, newRealValue);\n    return true;\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\n\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    freezeResults: false,\n};\nfunction defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\nvar OptimisticCacheLayer = (function (_super) {\n    __extends(OptimisticCacheLayer, _super);\n    function OptimisticCacheLayer(optimisticId, parent, transaction) {\n        var _this = _super.call(this, Object.create(null)) || this;\n        _this.optimisticId = optimisticId;\n        _this.parent = parent;\n        _this.transaction = transaction;\n        return _this;\n    }\n    OptimisticCacheLayer.prototype.toObject = function () {\n        return __assign(__assign({}, this.parent.toObject()), this.data);\n    };\n    OptimisticCacheLayer.prototype.get = function (dataId) {\n        return hasOwn$1.call(this.data, dataId)\n            ? this.data[dataId]\n            : this.parent.get(dataId);\n    };\n    return OptimisticCacheLayer;\n}(ObjectCache));\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.cacheKeyRoot = new KeyTrie(canUseWeakMap);\n        _this.silenceBroadcast = false;\n        _this.config = __assign(__assign({}, defaultConfig), config);\n        if (_this.config.customResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = !!_this.config.addTypename;\n        _this.data = _this.config.resultCaching\n            ? new DepTrackingCache()\n            : new ObjectCache();\n        _this.optimisticData = _this.data;\n        _this.storeWriter = new StoreWriter();\n        _this.storeReader = new StoreReader({\n            cacheKeyRoot: _this.cacheKeyRoot,\n            freezeResults: config.freezeResults,\n        });\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                if (c.optimistic) {\n                    return;\n                }\n                if (c.previousResult) {\n                    return;\n                }\n                if (cache.data instanceof DepTrackingCache) {\n                    return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).toObject();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        if (typeof options.rootId === 'string' &&\n            typeof this.data.get(options.rootId) === 'undefined') {\n            return null;\n        }\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.readQueryFromStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n            rootId: options.rootId,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            previousResult: options.previousResult,\n            config: this.config,\n        }) || null;\n    };\n    InMemoryCache.prototype.write = function (write) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        this.storeWriter.writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.diffQueryAgainstStore({\n            store: query.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(7) : new InvariantError(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var toReapply = [];\n        var removedCount = 0;\n        var layer = this.optimisticData;\n        while (layer instanceof OptimisticCacheLayer) {\n            if (layer.optimisticId === idToRemove) {\n                ++removedCount;\n            }\n            else {\n                toReapply.push(layer);\n            }\n            layer = layer.parent;\n        }\n        if (removedCount > 0) {\n            this.optimisticData = layer;\n            while (toReapply.length > 0) {\n                var layer_1 = toReapply.pop();\n                this.performTransaction(layer_1.transaction, layer_1.optimisticId);\n            }\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _a = this, data = _a.data, silenceBroadcast = _a.silenceBroadcast;\n        this.silenceBroadcast = true;\n        if (typeof optimisticId === 'string') {\n            this.data = this.optimisticData = new OptimisticCacheLayer(optimisticId, this.optimisticData, transaction);\n        }\n        try {\n            transaction(this);\n        }\n        finally {\n            this.silenceBroadcast = silenceBroadcast;\n            this.data = data;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        return this.performTransaction(transaction, id);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.silenceBroadcast) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c); });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            previousResult: c.previousResult && c.previousResult(),\n            optimistic: c.optimistic,\n        }));\n    };\n    return InMemoryCache;\n}(ApolloCache));\n\nexport { HeuristicFragmentMatcher, InMemoryCache, IntrospectionFragmentMatcher, ObjectCache, StoreReader, StoreWriter, WriteError, assertIdValue, defaultDataIdFromObject, defaultNormalizedCacheFactory$1 as defaultNormalizedCacheFactory, enhanceErrorWithDocument };\n//# sourceMappingURL=bundle.esm.js.map\n","import Observable from 'zen-observable-ts';\nexport { default as Observable } from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { __extends, __assign } from 'tslib';\nimport { getOperationName } from 'apollo-utilities';\nexport { getOperationName } from 'apollo-utilities';\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nfunction toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\nvar makePromise = toPromise;\nfunction fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nfunction fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nfunction createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nfunction getKey(operation) {\n    var query = operation.query, variables = operation.variables, operationName = operation.operationName;\n    return JSON.stringify([operationName, query, variables]);\n}\n\nfunction passthrough(op, forward) {\n    return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction empty() {\n    return new ApolloLink(function () { return Observable.of(); });\n}\nfunction from(links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n}\nfunction split(test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n}\nvar concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nfunction execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n\nexport { ApolloLink, concat, createOperation, empty, execute, from, fromError, fromPromise, makePromise, split, toPromise };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { getOperationDefinition, isEqual, tryFunctionOrLogError, cloneDeep, mergeDeep, hasDirectives, removeClientSetsFromDocument, buildQueryFromSelectionSet, getMainDefinition, getFragmentDefinitions, createFragmentMap, mergeDeepArray, resultKeyNameFromField, argumentsObjectFromField, shouldInclude, isField, isInlineFragment, canUseWeakMap, graphQLResultHasError, removeConnectionDirectiveFromDocument, hasClientExports, getDefaultValues, getOperationName } from 'apollo-utilities';\nimport { Observable as Observable$1, execute, ApolloLink } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(Observable$1));\n\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue && (storeValue.networkError ||\n        (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors)));\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        var opDef = getOperationDefinition(options.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        _this.queryManager = queryManager;\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            var lastResult = this.lastResult;\n            return {\n                data: !this.lastError && lastResult && lastResult.data || void 0,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        var result;\n        var fetchPolicy = this.options.fetchPolicy;\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' ||\n            fetchPolicy === 'no-cache';\n        if (queryStoreValue) {\n            var networkStatus = queryStoreValue.networkStatus;\n            if (hasError(queryStoreValue, this.options.errorPolicy)) {\n                return {\n                    data: void 0,\n                    loading: false,\n                    networkStatus: networkStatus,\n                    error: new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    }),\n                };\n            }\n            if (queryStoreValue.variables) {\n                this.options.variables = __assign(__assign({}, this.options.variables), queryStoreValue.variables);\n                this.variables = this.options.variables;\n            }\n            result = {\n                data: data,\n                loading: isNetworkRequestInFlight(networkStatus),\n                networkStatus: networkStatus,\n            };\n            if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n                result.errors = queryStoreValue.graphQLErrors;\n            }\n        }\n        else {\n            var loading = isNetworkFetchPolicy ||\n                (partial && fetchPolicy !== 'cache-only');\n            result = {\n                data: data,\n                loading: loading,\n                networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n            };\n        }\n        if (!partial) {\n            this.updateLastResult(__assign(__assign({}, result), { stale: false }));\n        }\n        return __assign(__assign({}, result), { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            isEqual(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        var queryStore = this.queryManager.queryStore.get(this.queryId);\n        if (queryStore) {\n            queryStore.networkError = null;\n            queryStore.graphQLErrors = [];\n        }\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'cache-and-network') {\n            fetchPolicy = 'network-only';\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = __assign(__assign({}, this.variables), variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = __assign(__assign({}, this.options.variables), this.variables);\n        }\n        return this.queryManager.fetchQuery(this.queryId, __assign(__assign({}, this.options), { fetchPolicy: fetchPolicy }), FetchType.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(fetchMoreOptions.updateQuery, 2) : invariant(fetchMoreOptions.updateQuery, 'updateQuery option is required. This function defines how to update the query data with the new results.');\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), { variables: __assign(__assign({}, this.variables), fetchMoreOptions.variables) }))), { fetchPolicy: 'network-only' });\n        var qid = this.queryManager.generateQueryId();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, FetchType.normal, this.queryId)\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            _this.queryManager.stopQuery(qid);\n            return fetchMoreResult;\n        }, function (error) {\n            _this.queryManager.stopQuery(qid);\n            throw error;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                process.env.NODE_ENV === \"production\" || invariant.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldFetchPolicy = this.options.fetchPolicy;\n        this.options = __assign(__assign({}, this.options), opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var fetchPolicy = opts.fetchPolicy;\n        return this.setVariables(this.options.variables, oldFetchPolicy !== fetchPolicy && (oldFetchPolicy === 'cache-only' ||\n            oldFetchPolicy === 'standby' ||\n            fetchPolicy === 'network-only'), opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        variables = variables || this.variables;\n        if (!tryFetch && isEqual(variables, this.variables)) {\n            return this.observers.size && fetchResults\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.variables = this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.queryManager.fetchQuery(this.queryId, this.options);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var _a = queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult) {\n        var previousResult = this.lastResult;\n        this.lastResult = newResult;\n        this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n            ? newResult\n            : cloneDeep(newResult);\n        return previousResult;\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        try {\n            var subObserver = observer._subscription._observer;\n            if (subObserver && !subObserver.error) {\n                subObserver.error = defaultSubscriptionObserverErrorCallback;\n            }\n        }\n        catch (_a) { }\n        var first = !this.observers.size;\n        this.observers.add(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (first) {\n            this.setUpQuery();\n        }\n        return function () {\n            if (_this.observers.delete(observer) && !_this.observers.size) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;\n        if (this.shouldSubscribe) {\n            queryManager.addObservableQuery(queryId, this);\n        }\n        if (this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            queryManager.startPollingQuery(this.options, queryId);\n        }\n        var onError = function (error) {\n            _this.updateLastResult(__assign(__assign({}, _this.lastResult), { errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));\n            iterateObserversSafely(_this.observers, 'error', _this.lastError = error);\n        };\n        queryManager.observeQuery(queryId, this.options, {\n            next: function (result) {\n                if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n                    var previousResult_1 = _this.updateLastResult(result);\n                    var _a = _this.options, query_1 = _a.query, variables = _a.variables, fetchPolicy_1 = _a.fetchPolicy;\n                    if (queryManager.transform(query_1).hasClientExports) {\n                        queryManager.getLocalState().addExportedVariables(query_1, variables).then(function (variables) {\n                            var previousVariables = _this.variables;\n                            _this.variables = _this.options.variables = variables;\n                            if (!result.loading &&\n                                previousResult_1 &&\n                                fetchPolicy_1 !== 'cache-only' &&\n                                queryManager.transform(query_1).serverQuery &&\n                                !isEqual(previousVariables, variables)) {\n                                _this.refetch();\n                            }\n                            else {\n                                iterateObserversSafely(_this.observers, 'next', result);\n                            }\n                        });\n                    }\n                    else {\n                        iterateObserversSafely(_this.observers, 'next', result);\n                    }\n                }\n            },\n            error: onError,\n        }).catch(onError);\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        var queryManager = this.queryManager;\n        this.isTornDown = true;\n        queryManager.stopPollingQuery(this.queryId);\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        queryManager.removeObservableQuery(this.queryId);\n        queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n    };\n    return ObservableQuery;\n}(Observable));\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    process.env.NODE_ENV === \"production\" || invariant.error('Unhandled error', error.message, error.stack);\n}\nfunction iterateObserversSafely(observers, method, argument) {\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n    process.env.NODE_ENV === \"production\" ? invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 3) : invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = error;\n        }\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = null;\n        }\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        process.env.NODE_ENV === \"production\" ? invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 19) : invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 'Internal Error: may not update existing query string in store');\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        var storeValue = this.store && this.store[queryId];\n        if (storeValue) {\n            storeValue.networkError = null;\n            storeValue.previousVariables = null;\n            if (complete) {\n                storeValue.networkStatus = NetworkStatus.ready;\n            }\n        }\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        Object.keys(this.store).forEach(function (queryId) {\n            if (observableQueryIds.indexOf(queryId) < 0) {\n                _this.stopQuery(queryId);\n            }\n            else {\n                _this.store[queryId].networkStatus = NetworkStatus.loading;\n            }\n        });\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n            process.env.NODE_ENV === \"production\" || invariant.warn('Found @client directives in a query but no ApolloClient resolvers ' +\n                'were specified. This means ApolloClient local resolver handling ' +\n                'has been disabled, and @client directives will be passed through ' +\n                'to your link chain.');\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? removeClientSetsFromDocument(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = __assign(__assign({}, context), { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                    process.env.NODE_ENV === \"production\" ? invariant(false, 6) : invariant(false, 'To use context.getCacheKey, you need to use a cache that has ' +\n                        'a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            process.env.NODE_ENV === \"production\" ? invariant(fragment, 7) : invariant(fragment, \"No fragment named \" + selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, argumentsObjectFromField(field, variables), execContext.context, { field: field, fragmentMap: execContext.fragmentMap }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nfunction multiplex(inner) {\n    var observers = new Set();\n    var sub = null;\n    return new Observable(function (observer) {\n        observers.add(observer);\n        sub = sub || inner.subscribe({\n            next: function (value) {\n                observers.forEach(function (obs) { return obs.next && obs.next(value); });\n            },\n            error: function (error) {\n                observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n            complete: function () {\n                observers.forEach(function (obs) { return obs.complete && obs.complete(); });\n            },\n        });\n        return function () {\n            if (observers.delete(observer) && !observers.size && sub) {\n                sub.unsubscribe();\n                sub = null;\n            }\n        };\n    });\n}\nfunction asyncMap(observable, mapFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeNextCount = 0;\n        var completed = false;\n        var handler = {\n            next: function (value) {\n                ++activeNextCount;\n                new Promise(function (resolve) {\n                    resolve(mapFn(value));\n                }).then(function (result) {\n                    --activeNextCount;\n                    next && next.call(observer, result);\n                    completed && handler.complete();\n                }, function (e) {\n                    --activeNextCount;\n                    error && error.call(observer, e);\n                });\n            },\n            error: function (e) {\n                error && error.call(observer, e);\n            },\n            complete: function () {\n                completed = true;\n                if (!activeNextCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, self;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        process.env.NODE_ENV === \"production\" ? invariant(mutation, 9) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache', 10) : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                query: _this.queryStore.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: variables,\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            self.dataStore.markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                updateQueries: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            });\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            self.setQuery(mutationId, function () { return ({ document: null }); });\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                graphQLResultHasError(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, metadata, _b, fetchPolicy, _c, context, query, variables, storeResult, isNetworkOnly, needToFetch, _d, complete, result, shouldFetch, requestId, cancel, networkResult;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = options.metadata, metadata = _a === void 0 ? null : _a, _b = options.fetchPolicy, fetchPolicy = _b === void 0 ? 'cache-first' : _b, _c = options.context, context = _c === void 0 ? {} : _c;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        options = __assign(__assign({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _d = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _d.complete, result = _d.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        cancel = fetchPolicy !== 'no-cache'\n                            ? this.updateQueryWatch(queryId, query, options)\n                            : undefined;\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(queryId);\n                                        _this.invalidate(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                        this.invalidate(queryId);\n                        this.invalidate(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markQueryResult = function (queryId, result, _a, fetchMoreForQueryId) {\n        var fetchPolicy = _a.fetchPolicy, variables = _a.variables, errorPolicy = _a.errorPolicy;\n        if (fetchPolicy === 'no-cache') {\n            this.setQuery(queryId, function () { return ({\n                newData: { result: result.data, complete: true },\n            }); });\n        }\n        else {\n            this.dataStore.markQueryResult(result, this.getQuery(queryId).document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        function invoke(method, argument) {\n            if (observer[method]) {\n                try {\n                    observer[method](argument);\n                }\n                catch (e) {\n                    process.env.NODE_ENV === \"production\" || invariant.error(e);\n                }\n            }\n            else if (method === 'error') {\n                process.env.NODE_ENV === \"production\" || invariant.error(argument);\n            }\n        }\n        return function (queryStoreValue, newData) {\n            _this.invalidate(queryId, false);\n            if (!queryStoreValue)\n                return;\n            var _a = _this.getQuery(queryId), observableQuery = _a.observableQuery, document = _a.document;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n            var lastResult = observableQuery && observableQuery.getLastResult();\n            var networkStatusChanged = !!(lastResult &&\n                lastResult.networkStatus !== queryStoreValue.networkStatus);\n            var shouldNotifyIfLoading = options.returnPartialData ||\n                (!newData && queryStoreValue.previousVariables) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            if (loading && !shouldNotifyIfLoading) {\n                return;\n            }\n            var hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n            var errorPolicy = observableQuery\n                && observableQuery.options.errorPolicy\n                || options.errorPolicy\n                || 'none';\n            if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n                return invoke('error', new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }));\n            }\n            try {\n                var data = void 0;\n                var isMissing = void 0;\n                if (newData) {\n                    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                    }\n                    data = newData.result;\n                    isMissing = !newData.complete;\n                }\n                else {\n                    var lastError = observableQuery && observableQuery.getLastError();\n                    var errorStatusChanged = errorPolicy !== 'none' &&\n                        (lastError && lastError.graphQLErrors) !==\n                            queryStoreValue.graphQLErrors;\n                    if (lastResult && lastResult.data && !errorStatusChanged) {\n                        data = lastResult.data;\n                        isMissing = false;\n                    }\n                    else {\n                        var diffResult = _this.dataStore.getCache().diff({\n                            query: document,\n                            variables: queryStoreValue.previousVariables ||\n                                queryStoreValue.variables,\n                            returnPartialData: true,\n                            optimistic: true,\n                        });\n                        data = diffResult.result;\n                        isMissing = !diffResult.complete;\n                    }\n                }\n                var stale = isMissing && !(options.returnPartialData ||\n                    fetchPolicy === 'cache-only');\n                var resultFromStore = {\n                    data: stale ? lastResult && lastResult.data : data,\n                    loading: loading,\n                    networkStatus: queryStoreValue.networkStatus,\n                    stale: stale,\n                };\n                if (errorPolicy === 'all' && hasGraphQLErrors) {\n                    resultFromStore.errors = queryStoreValue.graphQLErrors;\n                }\n                invoke('next', resultFromStore);\n            }\n            catch (networkError) {\n                invoke('error', new ApolloError({ networkError: networkError }));\n            }\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cache = this.dataStore.getCache();\n            var transformed = cache.transformDocument(document);\n            var forLink = removeConnectionDirectiveFromDocument(cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: hasClientExports(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'standby', 11) : invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        options.variables = this.getVariables(options.query, options.variables);\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(options.query, 12) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document', 13) : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData, 14) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval, 15) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var listeners = _a.listeners;\n            listeners.add(listener);\n            return { invalidated: false };\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var cancel = this.getQuery(queryId).cancel;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (cancel)\n            cancel();\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        return this.dataStore.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.setQuery(queryId, function () { return ({ newData: null }); });\n                _this.invalidate(queryId);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (queryId, options, observer) {\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, options, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    _this.dataStore.markSubscriptionResult(result, query, variables);\n                    _this.broadcastQueries();\n                }\n                if (graphQLResultHasError(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy, returnPartialData = _a.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        var _b = this.dataStore.getCache().diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _b.result, complete = _b.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            process.env.NODE_ENV === \"production\" ? invariant(foundObserveableQuery, 17) : invariant(foundObserveableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (info.invalidated) {\n                info.listeners.forEach(function (listener) {\n                    if (listener) {\n                        listener(_this.queryStore.get(id), info.newData);\n                    }\n                });\n            }\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(execute(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(execute(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                _this.setQuery(queryId, function (_a) {\n                    var subscriptions = _a.subscriptions;\n                    subscriptions.delete(subscription);\n                });\n            };\n            var subscription = observable.map(function (result) {\n                if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                    _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                    _this.invalidate(queryId);\n                    _this.invalidate(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.dataStore.getCache().diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                subscriptions.add(subscription);\n            });\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: new Set(),\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: 1,\n            observableQuery: null,\n            subscriptions: new Set(),\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign(__assign({}, prev), updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (queryId, invalidated) {\n        if (invalidated === void 0) { invalidated = true; }\n        if (queryId) {\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n        process.env.NODE_ENV === \"production\" ? invariant(pollInterval, 18) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = __assign(__assign({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    _this.markMutationResult({\n                        mutationId: mutation.mutationId,\n                        result: { data: optimistic_1 },\n                        document: mutation.document,\n                        variables: mutation.variables,\n                        updateQueries: mutation.updateQueries,\n                        update: mutation.update,\n                    });\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [{\n                    result: mutation.result.data,\n                    dataId: 'ROOT_MUTATION',\n                    query: mutation.document,\n                    variables: mutation.variables,\n                }];\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                Object.keys(updateQueries_1).forEach(function (id) {\n                    var _a = updateQueries_1[id], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (complete) {\n                        var nextQueryResult = tryFunctionOrLogError(function () {\n                            return updater(currentQueryResult, {\n                                mutationResult: mutation.result,\n                                queryName: getOperationName(query.document) || undefined,\n                                queryVariables: query.variables,\n                            });\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites_1.push({\n                                result: nextQueryResult,\n                                dataId: 'ROOT_QUERY',\n                                query: query.document,\n                                variables: query.variables,\n                            });\n                        }\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n                var update = mutation.update;\n                if (update) {\n                    tryFunctionOrLogError(function () { return update(c, mutation.result); });\n                }\n            });\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (optimisticResponse) {\n            this.cache.removeOptimistic(mutationId);\n        }\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.6.10\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, _d = options.assumeImmutableResults, assumeImmutableResults = _d === void 0 ? false : _d, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = ApolloLink.empty();\n        }\n        if (!link || !cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(4) : new InvariantError(\"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n                \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n                \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\");\n        }\n        this.link = link;\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign(__assign({}, this.defaultOptions.watchQuery), options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign(__assign({}, this.defaultOptions.query), options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 5) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n            'client.query can only return a single result. Please use client.watchQuery ' +\n            'to receive multiple results from the cache and the network, or consider ' +\n            'using a different fetchPolicy, such as cache-first or network-only.');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign(__assign({}, this.defaultOptions.mutate), options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.cache.writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Calling the initQueryManager method is no longer necessary, ' +\n            'and it will be removed from ApolloClient in version 3.0.');\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    return ApolloClient;\n}());\n\nexport default ApolloClient;\nexport { ApolloClient, ApolloError, FetchType, NetworkStatus, ObservableQuery, isApolloError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __assign } from 'tslib';\nimport { print } from 'graphql/language/printer';\nimport { InvariantError } from 'ts-invariant';\n\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n};\nvar defaultHeaders = {\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nvar fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nvar throwServerError = function (response, result, message) {\n    var error = new Error(message);\n    error.name = 'ServerError';\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n};\nvar parseAndCheckHttpResponse = function (operations) { return function (response) {\n    return (response\n        .text()\n        .then(function (bodyText) {\n        try {\n            return JSON.parse(bodyText);\n        }\n        catch (err) {\n            var parseError = err;\n            parseError.name = 'ServerParseError';\n            parseError.response = response;\n            parseError.statusCode = response.status;\n            parseError.bodyText = bodyText;\n            return Promise.reject(parseError);\n        }\n    })\n        .then(function (result) {\n        if (response.status >= 300) {\n            throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n        }\n        if (!Array.isArray(result) &&\n            !result.hasOwnProperty('data') &&\n            !result.hasOwnProperty('errors')) {\n            throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations)\n                ? operations.map(function (op) { return op.operationName; })\n                : operations.operationName) + \"'.\");\n        }\n        return result;\n    }));\n}; };\nvar checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        var library = 'unfetch';\n        if (typeof window === 'undefined')\n            library = 'node-fetch';\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError(\"\\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\\nyour environment like https://www.npmjs.com/package/\" + library + \".\\n\\nFor example:\\nimport fetch from '\" + library + \"';\\nimport { createHttpLink } from 'apollo-link-http';\\n\\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });\");\n    }\n};\nvar createSignalIfSupported = function () {\n    if (typeof AbortController === 'undefined')\n        return { controller: false, signal: false };\n    var controller = new AbortController();\n    var signal = controller.signal;\n    return { controller: controller, signal: signal };\n};\nvar selectHttpOptionsAndBody = function (operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = __assign({}, fallbackConfig.options, { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });\n    var http = fallbackConfig.http;\n    configs.forEach(function (config) {\n        options = __assign({}, options, config.options, { headers: __assign({}, options.headers, config.headers) });\n        if (config.credentials)\n            options.credentials = config.credentials;\n        http = __assign({}, http, config.http);\n    });\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    if (http.includeQuery)\n        body.query = print(query);\n    return {\n        options: options,\n        body: body,\n    };\n};\nvar serializeFetchParameter = function (p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    }\n    catch (e) {\n        var parseError = process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"Network request failed. \" + label + \" is not serializable: \" + e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n};\nvar selectURI = function (operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    }\n    else if (typeof fallbackURI === 'function') {\n        return fallbackURI(operation);\n    }\n    else {\n        return fallbackURI || '/graphql';\n    }\n};\n\nexport { checkFetcher, createSignalIfSupported, fallbackHttpConfig, parseAndCheckHttpResponse, selectHttpOptionsAndBody, selectURI, serializeFetchParameter, throwServerError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __rest, __assign, __extends } from 'tslib';\nimport { ApolloLink, fromError, Observable } from 'apollo-link';\nimport { checkFetcher, selectURI, selectHttpOptionsAndBody, fallbackHttpConfig, createSignalIfSupported, serializeFetchParameter, parseAndCheckHttpResponse } from 'apollo-link-http-common';\n\nvar createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, fetcher = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\"]);\n    checkFetcher(fetcher);\n    if (!fetcher) {\n        fetcher = fetch;\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders['apollographql-client-name'] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders['apollographql-client-version'] = version;\n            }\n        }\n        var contextHeaders = __assign({}, clientAwarenessHeaders, context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders,\n        };\n        var _b = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        var controller;\n        if (!options.signal) {\n            var _c = createSignalIfSupported(), _controller = _c.controller, signal = _c.signal;\n            controller = _controller;\n            if (controller)\n                options.signal = signal;\n        }\n        var definitionIsMutation = function (d) {\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n        };\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = 'GET';\n        }\n        if (options.method === 'GET') {\n            var _d = rewriteURIForGET(chosenURI, body), newURI = _d.newURI, parseError = _d.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, 'Payload');\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            fetcher(chosenURI, options)\n                .then(function (response) {\n                operation.setContext({ response: response });\n                return response;\n            })\n                .then(parseAndCheckHttpResponse(operation))\n                .then(function (result) {\n                observer.next(result);\n                observer.complete();\n                return result;\n            })\n                .catch(function (err) {\n                if (err.name === 'AbortError')\n                    return;\n                if (err.result && err.result.errors && err.result.data) {\n                    observer.next(err.result);\n                }\n                observer.error(err);\n            });\n            return function () {\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\nfunction rewriteURIForGET(chosenURI, body) {\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(key + \"=\" + encodeURIComponent(value));\n    };\n    if ('query' in body) {\n        addQueryParam('query', body.query);\n    }\n    if (body.operationName) {\n        addQueryParam('operationName', body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = serializeFetchParameter(body.variables, 'Variables map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('variables', serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('extensions', serializedExtensions);\n    }\n    var fragment = '', preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf('#');\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n    return { newURI: newURI };\n}\nvar HttpLink = (function (_super) {\n    __extends(HttpLink, _super);\n    function HttpLink(opts) {\n        return _super.call(this, createHttpLink(opts).request) || this;\n    }\n    return HttpLink;\n}(ApolloLink));\n\nexport { HttpLink, createHttpLink };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __extends } from 'tslib';\nimport { ApolloLink, Observable } from 'apollo-link';\n\nfunction onError(errorHandler) {\n    return new ApolloLink(function (operation, forward) {\n        return new Observable(function (observer) {\n            var sub;\n            var retriedSub;\n            var retriedResult;\n            try {\n                sub = forward(operation).subscribe({\n                    next: function (result) {\n                        if (result.errors) {\n                            retriedResult = errorHandler({\n                                graphQLErrors: result.errors,\n                                response: result,\n                                operation: operation,\n                                forward: forward,\n                            });\n                            if (retriedResult) {\n                                retriedSub = retriedResult.subscribe({\n                                    next: observer.next.bind(observer),\n                                    error: observer.error.bind(observer),\n                                    complete: observer.complete.bind(observer),\n                                });\n                                return;\n                            }\n                        }\n                        observer.next(result);\n                    },\n                    error: function (networkError) {\n                        retriedResult = errorHandler({\n                            operation: operation,\n                            networkError: networkError,\n                            graphQLErrors: networkError &&\n                                networkError.result &&\n                                networkError.result.errors,\n                            forward: forward,\n                        });\n                        if (retriedResult) {\n                            retriedSub = retriedResult.subscribe({\n                                next: observer.next.bind(observer),\n                                error: observer.error.bind(observer),\n                                complete: observer.complete.bind(observer),\n                            });\n                            return;\n                        }\n                        observer.error(networkError);\n                    },\n                    complete: function () {\n                        if (!retriedResult) {\n                            observer.complete.bind(observer)();\n                        }\n                    },\n                });\n            }\n            catch (e) {\n                errorHandler({ networkError: e, operation: operation, forward: forward });\n                observer.error(e);\n            }\n            return function () {\n                if (sub)\n                    sub.unsubscribe();\n                if (retriedSub)\n                    sub.unsubscribe();\n            };\n        });\n    });\n}\nvar ErrorLink = (function (_super) {\n    __extends(ErrorLink, _super);\n    function ErrorLink(errorHandler) {\n        var _this = _super.call(this) || this;\n        _this.link = onError(errorHandler);\n        return _this;\n    }\n    ErrorLink.prototype.request = function (operation, forward) {\n        return this.link.request(operation, forward);\n    };\n    return ErrorLink;\n}(ApolloLink));\n\nexport { ErrorLink, onError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __extends } from 'tslib';\nimport ApolloClient__default from 'apollo-client';\nexport * from 'apollo-client';\nimport { ApolloLink, Observable } from 'apollo-link';\nexport * from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nexport * from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nexport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nexport { default as gql } from 'graphql-tag';\nimport { invariant } from 'ts-invariant';\n\nvar PRESET_CONFIG_KEYS = [\n    'request',\n    'uri',\n    'credentials',\n    'headers',\n    'fetch',\n    'fetchOptions',\n    'clientState',\n    'onError',\n    'cacheRedirects',\n    'cache',\n    'name',\n    'version',\n    'resolvers',\n    'typeDefs',\n    'fragmentMatcher',\n];\nvar DefaultClient = (function (_super) {\n    __extends(DefaultClient, _super);\n    function DefaultClient(config) {\n        if (config === void 0) { config = {}; }\n        var _this = this;\n        if (config) {\n            var diff = Object.keys(config).filter(function (key) { return PRESET_CONFIG_KEYS.indexOf(key) === -1; });\n            if (diff.length > 0) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('ApolloBoost was initialized with unsupported options: ' +\n                    (\"\" + diff.join(' ')));\n            }\n        }\n        var request = config.request, uri = config.uri, credentials = config.credentials, headers = config.headers, fetch = config.fetch, fetchOptions = config.fetchOptions, clientState = config.clientState, cacheRedirects = config.cacheRedirects, errorCallback = config.onError, name = config.name, version = config.version, resolvers = config.resolvers, typeDefs = config.typeDefs, fragmentMatcher = config.fragmentMatcher;\n        var cache = config.cache;\n        process.env.NODE_ENV === \"production\" ? invariant(!cache || !cacheRedirects, 1) : invariant(!cache || !cacheRedirects, 'Incompatible cache configuration. When not providing `cache`, ' +\n            'configure the provided instance with `cacheRedirects` instead.');\n        if (!cache) {\n            cache = cacheRedirects\n                ? new InMemoryCache({ cacheRedirects: cacheRedirects })\n                : new InMemoryCache();\n        }\n        var errorLink = errorCallback\n            ? onError(errorCallback)\n            : onError(function (_a) {\n                var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError;\n                if (graphQLErrors) {\n                    graphQLErrors.forEach(function (_a) {\n                        var message = _a.message, locations = _a.locations, path = _a.path;\n                        return process.env.NODE_ENV === \"production\" || invariant.warn(\"[GraphQL error]: Message: \" + message + \", Location: \" +\n                            (locations + \", Path: \" + path));\n                    });\n                }\n                if (networkError) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"[Network error]: \" + networkError);\n                }\n            });\n        var requestHandler = request\n            ? new ApolloLink(function (operation, forward) {\n                return new Observable(function (observer) {\n                    var handle;\n                    Promise.resolve(operation)\n                        .then(function (oper) { return request(oper); })\n                        .then(function () {\n                        handle = forward(operation).subscribe({\n                            next: observer.next.bind(observer),\n                            error: observer.error.bind(observer),\n                            complete: observer.complete.bind(observer),\n                        });\n                    })\n                        .catch(observer.error.bind(observer));\n                    return function () {\n                        if (handle) {\n                            handle.unsubscribe();\n                        }\n                    };\n                });\n            })\n            : false;\n        var httpLink = new HttpLink({\n            uri: uri || '/graphql',\n            fetch: fetch,\n            fetchOptions: fetchOptions || {},\n            credentials: credentials || 'same-origin',\n            headers: headers || {},\n        });\n        var link = ApolloLink.from([errorLink, requestHandler, httpLink].filter(function (x) { return !!x; }));\n        var activeResolvers = resolvers;\n        var activeTypeDefs = typeDefs;\n        var activeFragmentMatcher = fragmentMatcher;\n        if (clientState) {\n            if (clientState.defaults) {\n                cache.writeData({\n                    data: clientState.defaults,\n                });\n            }\n            activeResolvers = clientState.resolvers;\n            activeTypeDefs = clientState.typeDefs;\n            activeFragmentMatcher = clientState.fragmentMatcher;\n        }\n        _this = _super.call(this, {\n            cache: cache,\n            link: link,\n            name: name,\n            version: version,\n            resolvers: activeResolvers,\n            typeDefs: activeTypeDefs,\n            fragmentMatcher: activeFragmentMatcher,\n        }) || this;\n        return _this;\n    }\n    return DefaultClient;\n}(ApolloClient__default));\n\nexport default DefaultClient;\n//# sourceMappingURL=bundle.esm.js.map\n","import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\n\nfunction isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n    return idObject &&\n        idObject.type === 'id' &&\n        typeof idObject.generated === 'boolean';\n}\nfunction toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nfunction isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\nfunction valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    return getInclusionDirectives(selection.directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === 'Variable') {\n            evaledValue = variables[ifArgument.value.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 13) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(doc) {\n    var names = [];\n    visit(doc, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\nfunction hasClientExports(document) {\n    return (document &&\n        hasDirectives(['client'], document) &&\n        hasDirectives(['export'], document));\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n    return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n        var directiveArguments = directive.arguments;\n        var directiveName = directive.name.value;\n        process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 14) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        var ifArgument = directiveArguments[0];\n        process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 15) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n        var ifValue = ifArgument.value;\n        process.env.NODE_ENV === \"production\" ? invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 16) : invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n        return { directive: directive, ifArgument: ifArgument };\n    }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        if (definition.kind === 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(11) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === 'undefined') {\n        process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 12) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = __assign(__assign({}, document), { definitions: __spreadArrays([\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions) });\n    return query;\n}\n\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n\nfunction getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 1) : invariant(mutationDef, 'Must contain a mutation definition.');\n    return mutationDef;\n}\nfunction checkDocument(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 2) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(3) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 4) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    process.env.NODE_ENV === \"production\" ? invariant(def, 5) : invariant(def, \"GraphQL document is missing an operation\");\n    return def;\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 6) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 7) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 8) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n    var fragmentDef = doc.definitions[0];\n    process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 9) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n    }\n    return {};\n}\nfunction variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n\nfunction filterInPlace(array, test, context) {\n    var target = 0;\n    array.forEach(function (elem, i) {\n        if (test.call(this, elem, i, array)) {\n            array[target++] = elem;\n        }\n    }, context);\n    array.length = target;\n    return array;\n}\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    var parentPath;\n    return nullIfDocIsEmpty(visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, _parent, path) {\n                var currentPath = path.join('-');\n                if (!parentPath ||\n                    currentPath === parentPath ||\n                    !currentPath.startsWith(parentPath)) {\n                    if (node.selections) {\n                        var selectionsWithDirectives = node.selections.filter(function (selection) { return hasDirectivesInSelection(directives, selection); });\n                        if (hasDirectivesInSelectionSet(directives, node, false)) {\n                            parentPath = currentPath;\n                        }\n                        return __assign(__assign({}, node), { selections: selectionsWithDirectives });\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n    }));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&\n    navigator.product === 'ReactNative');\n\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n    return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n\nfunction getEnv() {\n    if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n        return process.env.NODE_ENV;\n    }\n    return 'development';\n}\nfunction isEnv(env) {\n    return getEnv() === env;\n}\nfunction isProduction() {\n    return isEnv('production') === true;\n}\nfunction isDevelopment() {\n    return isEnv('development') === true;\n}\nfunction isTest() {\n    return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nfunction graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nfunction maybeDeepFreeze(obj) {\n    if (isDevelopment() || isTest()) {\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var pastCopies = [];\n        target = shallowCopyForMerge(target, pastCopies);\n        for (var i = 1; i < count; ++i) {\n            target = mergeHelper(target, sources[i], pastCopies);\n        }\n    }\n    return target;\n}\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\nfunction mergeHelper(target, source, pastCopies) {\n    if (isObject(source) && isObject(target)) {\n        if (Object.isExtensible && !Object.isExtensible(target)) {\n            target = shallowCopyForMerge(target, pastCopies);\n        }\n        Object.keys(source).forEach(function (sourceKey) {\n            var sourceValue = source[sourceKey];\n            if (hasOwnProperty.call(target, sourceKey)) {\n                var targetValue = target[sourceKey];\n                if (sourceValue !== targetValue) {\n                    target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n                }\n            }\n            else {\n                target[sourceKey] = sourceValue;\n            }\n        });\n        return target;\n    }\n    return source;\n}\nfunction shallowCopyForMerge(value, pastCopies) {\n    if (value !== null &&\n        typeof value === 'object' &&\n        pastCopies.indexOf(value) < 0) {\n        if (Array.isArray(value)) {\n            value = value.slice(0);\n        }\n        else {\n            value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n        }\n        pastCopies.push(value);\n    }\n    return value;\n}\n\nvar haveWarned = Object.create({});\nfunction warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (!isProduction() && !haveWarned[msg]) {\n        if (!isTest()) {\n            haveWarned[msg] = true;\n        }\n        if (type === 'error') {\n            console.error(msg);\n        }\n        else {\n            console.warn(msg);\n        }\n    }\n}\n\nfunction stripSymbols(data) {\n    return JSON.parse(JSON.stringify(data));\n}\n\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };\n//# sourceMappingURL=bundle.esm.js.map\n"],"sourceRoot":""}