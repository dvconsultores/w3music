{"version":3,"sources":["webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/ts-invariant/lib/invariant.esm.js","webpack:///./node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","webpack:///./node_modules/stream-browserify/index.js"],"names":["symbolObservablePonyfill","root","result","Symbol","observable","self","window","global","module","Buffer","isEncoding","encoding","toLowerCase","_normalizeEncoding","enc","retried","normalizeEncoding","nenc","Error","StringDecoder","nb","this","text","utf16Text","end","utf16End","fillLast","utf8FillLast","base64Text","base64End","write","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","utf8CheckByte","byte","utf8CheckIncomplete","buf","i","j","length","utf8CheckExtraBytes","p","r","undefined","copy","toString","utf8Text","total","utf8End","c","charCodeAt","slice","n","exports","prototype","genericMessage","_a","Object","setPrototypeOf","obj","proto","__proto__","InvariantError","_super","message","_this","call","framesToPop","name","invariant","condition","wrapConsoleMethod","method","console","apply","arguments","warn","error","processStub","env","process","Function","atLeastWeTried","inRange","a","min","max","ToDictionary","o","TypeError","stringToCodePoints","string","s","String","u","push","d","b","codePointsToString","code_points","cp","fromCharCode","end_of_stream","Stream","tokens","endOfStream","read","shift","prepend","token","Array","isArray","unshift","pop","finished","decoderError","fatal","opt_code_point","Decoder","Encoder","handler","stream","bite","code_point","DEFAULT_ENCODING","TextDecoder","options","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","defineProperty","value","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","UTF8Encoder","count","offset","bytes","temp","decode","input","ArrayBuffer","Uint8Array","buffer","byteOffset","byteLength","input_stream","indexOf","encode","opt_string","EE","EventEmitter","inherits","Readable","Writable","Duplex","Transform","PassThrough","pipe","dest","source","ondata","chunk","writable","pause","ondrain","readable","resume","on","_isStdio","onend","onclose","didOnEnd","destroy","onerror","er","cleanup","listenerCount","removeListener","emit"],"mappings":"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","file":"js/chunk-vendors~ec8c427e.89af27c2.js","sourcesContent":["export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","import { __extends } from 'tslib';\n\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, typeof message === \"number\"\r\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\r\n            : message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\nfunction wrapConsoleMethod(method) {\r\n    return function () {\r\n        return console[method].apply(console, arguments);\r\n    };\r\n}\r\n(function (invariant) {\r\n    invariant.warn = wrapConsoleMethod(\"warn\");\r\n    invariant.error = wrapConsoleMethod(\"error\");\r\n})(invariant || (invariant = {}));\r\n// Code that uses ts-invariant with rollup-plugin-invariant may want to\r\n// import this process stub to avoid errors evaluating process.env.NODE_ENV.\r\n// However, because most ESM-to-CJS compilers will rewrite the process import\r\n// as tsInvariant.process, which prevents proper replacement by minifiers, we\r\n// also attempt to define the stub globally when it is not already defined.\r\nvar processStub = { env: {} };\r\nif (typeof process === \"object\") {\r\n    processStub = process;\r\n}\r\nelse\r\n    try {\r\n        // Using Function to evaluate this assignment in global scope also escapes\r\n        // the strict mode of the current module, thereby allowing the assignment.\r\n        // Inspired by https://github.com/facebook/regenerator/pull/369.\r\n        Function(\"stub\", \"process = stub\")(processStub);\r\n    }\r\n    catch (atLeastWeTried) {\r\n        // The assignment can fail if a Content Security Policy heavy-handedly\r\n        // forbids Function usage. In those environments, developers should take\r\n        // extra care to replace process.env.NODE_ENV in their production builds,\r\n        // or define an appropriate global.process polyfill.\r\n    }\r\nvar invariant$1 = invariant;\n\nexport default invariant$1;\nexport { InvariantError, invariant, processStub as process };\n//# sourceMappingURL=invariant.esm.js.map\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n"],"sourceRoot":""}