{"version":3,"sources":["webpack:////Users/mariaarevalo/node_modules/@firebase/app-compat/dist/esm/index.esm2017.js","webpack:////Users/mariaarevalo/node_modules/@firebase/auth-compat/dist/index.esm2017.js","webpack:////Users/mariaarevalo/node_modules/@firebase/app/dist/esm/index.esm2017.js"],"names":["FirebaseAppImpl","_delegate","firebase","this","container","automaticDataCollectionEnabled","val","name","options","Promise","resolve","checkDestroyed","then","INTERNAL","removeApp","instanceIdentifier","_a","provider","getProvider","isInitialized","getComponent","instantiationMode","initialize","getImmediate","identifier","clearInstance","component","ERRORS","ERROR_FACTORY","createFirebaseNamespaceCore","firebaseAppImpl","apps","namespace","__esModule","initializeApp","initializeAppCompat","app","registerVersion","setLogLevel","onLog","SDK_VERSION","registerComponent","registerComponentCompat","useAsService","modularAPIs","create","appName","rawConfig","appCompat","getApps","Object","keys","map","componentName","componentNameWithoutCompat","replace","type","serviceNamespace","appArg","undefined","serviceProps","prototype","args","serviceFxn","_getService","bind","apply","multipleInstances","useService","defineProperty","get","createFirebaseNamespace","extendNamespace","props","assign","createSubscribe","ErrorFactory","deepExtend","firebase$1","logger","version","registerCoreComponents","variant","self","warn","sdkVersion","indexOf","CORDOVA_ONDEVICEREADY_TIMEOUT_MS","_getCurrentScheme","location","protocol","_isHttpOrHttps","_isAndroidOrIosCordovaScheme","ua","toLowerCase","match","_isNativeEnvironment","_isIe11","document","documentMode","_isEdge","test","_isLocalStorageNotSynchronized","_isWebStorageSupported","storage","localStorage","key","e","_isWorker","global","_isPopupRedirectSupported","_isLikelyCordova","async","_isCordova","timeoutId","setTimeout","addEventListener","clearTimeout","_getSelfWindow","window","Persistence","LOCAL","NONE","SESSION","_assert$3","PERSISTENCE_KEY","_validatePersistenceArgument","auth","persistence","values","includes","_savePersistenceForRedirect","_initializationPromise","session","getSessionStorageIfAvailable","config","apiKey","setItem","_getPersistence","_getPersistencesFromRedirect","getItem","sessionStorage","_assert$2","CompatPopupRedirectResolver","browserResolver","cordovaResolver","underlyingResolver","_redirectPersistence","_completeRedirectFn","_overrideRedirectResult","selectUnderlyingResolver","assertedUnderlyingResolver","_initialize","authType","eventId","_openPopup","_openRedirect","cb","_isIframeWebStorageSupported","_originValidation","_shouldInitProactively","isCordova","unwrap","object","wrapped","credentialFromResponse","userCredential","credentialFromObject","attachExtraErrorFields","response","customData","_tokenResponse","code","mfaErr","resolver","MultiFactorResolver","credential","credErr","tenantId","email","phoneNumber","credentialFromResult","providerId","PASSWORD","GOOGLE","FACEBOOK","GITHUB","TWITTER","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","startsWith","_create","_fromParams","signInMethod","idToken","accessToken","rawNonce","credentialFromError","convertCredential","credentialPromise","catch","operationType","user","additionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","verificationId","confirm","verificationCode","hints","assertion","resolveSignIn","multiFactor","USER_MAP","has","set","delete","reload","toJSON","forceRefresh","getIdTokenResult","getIdToken","linkWithCredential","applicationVerifier","reauthenticateWithCredential","actionCodeSettings","newEmail","newPassword","phoneCredential","profile","emailVerified","isAnonymous","metadata","providerData","refreshToken","displayName","photoURL","uid","WeakMap","_assert$1","Auth","linkUnderlyingAuth","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","url","password","fetchSignInMethodsForEmail","emailLink","framework","nextOrObserver","errorFn","completed","next","error","complete","wrapObservers","onAuthStateChanged","onIdTokenChanged","converted","isIndexedDBFullySupported","_isAvailable","setPersistence","signInWithCredential","token","updateCurrentUser","_delete","oldNext","newNext","persistences","push","PhoneAuthProvider","phoneInfoOptions","verifyPhoneNumber","PHONE_SIGN_IN_METHOD","PROVIDER_ID","_assert","RecaptchaVerifier","parameters","clear","render","verify","AUTH_TYPE","registerAuthCompat","instance","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","FacebookAuthProvider","GithubAuthProvider","GoogleAuthProvider","OAuthProvider","SAMLAuthProvider","PhoneMultiFactorGenerator","TwitterAuthProvider","AuthCredential","Error","setInstantiationMode","setMultipleInstances","PlatformLoggerServiceImpl","providers","getProviders","isVersionServiceProvider","service","library","filter","logString","join","name$o","version$1","name$n","name$m","name$l","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","Map","_components","_addComponent","addComponent","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","_getProvider","heartbeatController","optional","triggerHeartbeat","_removeServiceInstance","_clearComponents","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","_container","isDeleted","String","existingApp","newApp","getApp","Array","from","deleteApp","all","libraryKeyOrName","libraryMismatch","versionMismatch","warning","logCallback","logLevel","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","upgrade","db","oldVersion","createObjectStore","originalErrorMessage","message","readHeartbeatsFromIndexedDB","result","transaction","objectStore","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","tx","put","done","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","platformLogger","agent","getPlatformInfoString","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","some","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","length","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","headerString","JSON","stringify","today","toISOString","substring","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject"],"mappings":"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","file":"js/chunk-72414379.d9ebf482.js","sourcesContent":["import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(_delegate, firebase) {\r\n        this._delegate = _delegate;\r\n        this.firebase = firebase;\r\n        // add itself to container\r\n        _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n        this.container = _delegate.container;\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        return this._delegate.automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this._delegate.automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get options() {\r\n        return this._delegate.options;\r\n    }\r\n    delete() {\r\n        return new Promise(resolve => {\r\n            this._delegate.checkDestroyed();\r\n            resolve();\r\n        }).then(() => {\r\n            this.firebase.INTERNAL.removeApp(this.name);\r\n            return deleteApp(this._delegate);\r\n        });\r\n    }\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    _getService(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        var _a;\r\n        this._delegate.checkDestroyed();\r\n        // Initialize instance if InstatiationMode is `EXPLICIT`.\r\n        const provider = this._delegate.container.getProvider(name);\r\n        if (!provider.isInitialized() &&\r\n            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\" /* InstantiationMode.EXPLICIT */) {\r\n            provider.initialize();\r\n        }\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return provider.getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    }\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    _removeServiceInstance(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        this._delegate.container\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .getProvider(name)\r\n            .clearInstance(instanceIdentifier);\r\n    }\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\r\n    _addComponent(component) {\r\n        _addComponent(this._delegate, component);\r\n    }\r\n    _addOrOverwriteComponent(component) {\r\n        _addOrOverwriteComponent(this._delegate, component);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\r\n            options: this.options\r\n        };\r\n    }\r\n}\r\n// TODO: investigate why the following needs to be commented out\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n//   FirebaseAppImpl.prototype.delete ||\r\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    const apps = {};\r\n    // // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    // const components = new Map<string, Component<any>>();\r\n    // A namespace is a plain JavaScript Object.\r\n    const namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeAppCompat,\r\n        // @ts-ignore\r\n        app,\r\n        registerVersion: modularAPIs.registerVersion,\r\n        setLogLevel: modularAPIs.setLogLevel,\r\n        onLog: modularAPIs.onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: modularAPIs.SDK_VERSION,\r\n        INTERNAL: {\r\n            registerComponent: registerComponentCompat,\r\n            removeApp,\r\n            useAsService,\r\n            modularAPIs\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || modularAPIs._DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */\r\n    function initializeAppCompat(options, rawConfig = {}) {\r\n        const app = modularAPIs.initializeApp(options, rawConfig);\r\n        if (contains(apps, app.name)) {\r\n            return apps[app.name];\r\n        }\r\n        const appCompat = new firebaseAppImpl(app, namespace);\r\n        apps[app.name] = appCompat;\r\n        return appCompat;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(name => apps[name]);\r\n    }\r\n    function registerComponentCompat(component) {\r\n        const componentName = component.name;\r\n        const componentNameWithoutCompat = componentName.replace('-compat', '');\r\n        if (modularAPIs._registerComponent(component) &&\r\n            component.type === \"PUBLIC\" /* ComponentType.PUBLIC */) {\r\n            // create service namespace for public components\r\n            // The Service namespace is an accessor function ...\r\n            const serviceNamespace = (appArg = app()) => {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentNameWithoutCompat] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentNameWithoutCompat]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentNameWithoutCompat] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentNameWithoutCompat] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function (...args) {\r\n                    const serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        return component.type === \"PUBLIC\" /* ComponentType.PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentNameWithoutCompat]\r\n            : null;\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        const useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), { createFirebaseNamespace,\r\n        extendNamespace,\r\n        createSubscribe,\r\n        ErrorFactory,\r\n        deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nconst firebase$1 = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app-compat');\n\nconst name = \"@firebase/app-compat\";\nconst version = \"0.2.19\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    // Register `app` package.\r\n    registerVersion(name, version, variant);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\r\n    // eslint-disable-next-line\r\n    const sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\r\n    }\r\n}\r\nconst firebase = firebase$1;\r\nregisterCoreComponents();\n\nexport { firebase as default };\n//# sourceMappingURL=index.esm2017.js.map\n","import firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, getUA, isReactNative, isNode, isIndexedDBAvailable, isIE, FirebaseError } from '@firebase/util';\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.4.6\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\r\n    return !!((_getCurrentScheme() === 'file:' ||\r\n        _getCurrentScheme() === 'ionic:' ||\r\n        _getCurrentScheme() === 'capacitor:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return isReactNative() || isNode();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = getUA()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = exp._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return isIndexedDBAvailable();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && isIndexedDBAvailable();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof global !== 'undefined' &&\r\n        'WorkerGlobalScope' in global &&\r\n        'importScripts' in global);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        isBrowserExtension() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\r\nfunction _getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = exp._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if (isReactNative()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (isNode()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && isIndexedDBAvailable()), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const session = getSessionStorageIfAvailable();\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (session) {\r\n        session.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const session = getSessionStorageIfAvailable();\r\n    if (!session) {\r\n        return [];\r\n    }\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = session.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [exp.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [exp.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n/** Returns session storage, or null if the property access errors */\r\nfunction getSessionStorageIfAvailable() {\r\n    var _a;\r\n    try {\r\n        return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = exp._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\r\n        this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = exp.browserSessionPersistence;\r\n        this._completeRedirectFn = exp._getRedirectResult;\r\n        this._overrideRedirectResult = exp._overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* exp.AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return exp.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === exp.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case exp.ProviderId.GOOGLE:\r\n            provider = exp.GoogleAuthProvider;\r\n            break;\r\n        case exp.ProviderId.FACEBOOK:\r\n            provider = exp.FacebookAuthProvider;\r\n            break;\r\n        case exp.ProviderId.GITHUB:\r\n            provider = exp.GithubAuthProvider;\r\n            break;\r\n        case exp.ProviderId.TWITTER:\r\n            provider = exp.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return exp.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return exp.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new exp.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: exp.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = exp.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return exp.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await exp.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return exp.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return exp.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return exp.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return exp.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = exp._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: buildPersistenceHierarchy(apiKey, app.name),\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(exp.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        exp.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return exp.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return exp.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return exp.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return exp.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return exp.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        const credential = await exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        exp.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = exp.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await exp\r\n                    ._getInstance(exp.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? exp.indexedDBLocalPersistence\r\n                    : exp.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = exp.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return exp._fail(\"argument-error\" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return exp.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\r\nfunction buildPersistenceHierarchy(apiKey, appName) {\r\n    // Note this is slightly different behavior: in this case, the stored\r\n    // persistence is checked *first* rather than last. This is because we want\r\n    // to prefer stored persistence type in the hierarchy. This is an empty\r\n    // array if window is not available or there is no pending redirect\r\n    const persistences = _getPersistencesFromRedirect(apiKey, appName);\r\n    // If \"self\" is available, add indexedDB\r\n    if (typeof self !== 'undefined' &&\r\n        !persistences.includes(exp.indexedDBLocalPersistence)) {\r\n        persistences.push(exp.indexedDBLocalPersistence);\r\n    }\r\n    // If \"window\" is available, add HTML Storage persistences\r\n    if (typeof window !== 'undefined') {\r\n        for (const persistence of [\r\n            exp.browserLocalPersistence,\r\n            exp.browserSessionPersistence\r\n        ]) {\r\n            if (!persistences.includes(persistence)) {\r\n                persistences.push(persistence);\r\n            }\r\n        }\r\n    }\r\n    // Add in-memory as a final fallback\r\n    if (!persistences.includes(exp.inMemoryPersistence)) {\r\n        persistences.push(exp.inMemoryPersistence);\r\n    }\r\n    return persistences;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = exp._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = firebase.app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new exp.RecaptchaVerifier(\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth(), container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters);\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: exp.EmailAuthProvider,\r\n        FacebookAuthProvider: exp.FacebookAuthProvider,\r\n        GithubAuthProvider: exp.GithubAuthProvider,\r\n        GoogleAuthProvider: exp.GoogleAuthProvider,\r\n        OAuthProvider: exp.OAuthProvider,\r\n        SAMLAuthProvider: exp.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: exp.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: exp.AuthCredential,\r\n        Error: FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* InstantiationMode.LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(firebase);\n//# sourceMappingURL=index.esm2017.js.map\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.19\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"10.4.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const result = await db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n"],"sourceRoot":""}